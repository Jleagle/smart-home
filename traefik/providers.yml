http:

  middlewares:
    #    authentik:
    #      forwardauth:
    #        address: "http://authentik-server:9002/outpost.goauthentik.io/auth/traefik"
    #        trustForwardHeader: "true"
    #        authResponseHeaders: "X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid,X-authentik-jwt,X-authentik-meta-jwks,X-authentik-meta-outpost,X-authentik-meta-provider,X-authentik-meta-app,X-authentik-meta-version"
    traefik-forward-auth:
      forwardAuth:
        address: "http://localhost:4181"
        authResponseHeaders: "X-Forwarded-User"

  routers:
    2fauth-route:
      rule: "Host(`2fauth.jimeagle.com`)"
      service: "2fauth-service"
      middlewares:
        - "traefik-forward-auth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    adguard-route:
      rule: "Host(`adguard.jimeagle.com`)"
      service: "adguard-service"
      middlewares:
        - "traefik-forward-auth"
      #        - "authentik"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    assistant-relay-route:
      rule: "Host(`assistantrelay.jimeagle.com`)"
      service: "assistant-relay-service"
      middlewares:
        - "traefik-forward-auth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    #    authentik-route:
    #      rule: "Host(`authentik.jimeagle.com`) && PathPrefix(`/outpost.goauthentik.io/`)"
    #      service: "authentik-service"
    #      tls:
    #        certResolver: "myresolver"
    #      entryPoints:
    #        - "websecure"
    bazarr-route:
      rule: "Host(`bazarr.jimeagle.com`)"
      service: "bazarr-service"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    changedetection-route:
      rule: "Host(`changedetection.jimeagle.com`)"
      service: "changedetection-service"
      middlewares:
        - "traefik-forward-auth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    cockpit-route:
      rule: "Host(`cockpit.jimeagle.com`)"
      service: "cockpit-service"
      middlewares:
        - "traefik-forward-auth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    doubletake-route:
      rule: "Host(`doubletake.jimeagle.com`)"
      service: "doubletake-service"
      middlewares:
        - "traefik-forward-auth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    esphome-route:
      rule: "Host(`esphome.jimeagle.com`)"
      service: "esphome-service"
      middlewares:
        - "traefik-forward-auth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    flextv-route:
      rule: "Host(`flextv.jimeagle.com`)"
      service: "flextv-service"
      middlewares:
        - "traefik-forward-auth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    frigate-route:
      rule: "Host(`frigate.jimeagle.com`)"
      service: "frigate-service"
      middlewares:
        - "traefik-forward-auth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    #    go2rtc-route:
    #      rule: "Host(`go2rtc.jimeagle.com`)"
    #      service: "go2rtc-service"
    #      middlewares:
    #        - "traefik-forward-auth"
    #      tls:
    #        certResolver: "myresolver"
    #      entryPoints:
    #        - "websecure"
    grafana-route:
      rule: "Host(`grafana.jimeagle.com`)"
      service: "grafana-service"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    hass-route:
      rule: "Host(`hass.jimeagle.com`)"
      service: "hass-service"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    homepage-route:
      rule: "Host(`homepage.jimeagle.com`)"
      service: "homepage-service"
      middlewares:
        - "traefik-forward-auth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    homarr-route:
      rule: "Host(`homarr.jimeagle.com`)"
      service: "homarr-service"
      middlewares:
        - "traefik-forward-auth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    influx-route:
      rule: "Host(`influx.jimeagle.com`)"
      service: "influx-service"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    kuma-route:
      rule: "Host(`kuma.jimeagle.com`)"
      service: "kuma-service"
      middlewares:
        - "traefik-forward-auth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    matrix-route:
      rule: "Host(`matrix.jimeagle.com`)"
      service: "matrix-service"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    mealie-route:
      rule: "Host(`mealie.jimeagle.com`)"
      service: "mealie-service"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    nodered-route:
      rule: "Host(`nodered.jimeagle.com`)"
      service: "nodered-service"
      middlewares:
        - "traefik-forward-auth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    nzbget-route:
      rule: "Host(`nzbget.jimeagle.com`)"
      service: "nzbget-service"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    overseerr-route:
      rule: "Host(`overseerr.jimeagle.com`)"
      service: "overseerr-service"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    pihole-route:
      rule: "Host(`pihole.jimeagle.com`)"
      service: "pihole-service"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    plex-route:
      rule: "Host(`plex.jimeagle.com`)"
      service: "plex-service"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    portainer-route:
      rule: "Host(`portainer.jimeagle.com`)"
      service: "portainer-service"
      middlewares:
        - "traefik-forward-auth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    prowlarr-route:
      rule: "Host(`prowlarr.jimeagle.com`)"
      service: "prowlarr-service"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    radarr-route:
      rule: "Host(`radarr.jimeagle.com`)"
      service: "radarr-service"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    router-route:
      rule: "Host(`router.jimeagle.com`)"
      service: "router-service"
      middlewares:
        - "traefik-forward-auth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    scrutiny-route:
      rule: "Host(`scrutiny.jimeagle.com`)"
      service: "scrutiny-service"
      middlewares:
        - "traefik-forward-auth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    serpbear-route:
      rule: "Host(`serpbear.jimeagle.com`)"
      service: "serpbear-service"
      middlewares:
        - "traefik-forward-auth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    syncthing-route:
      rule: "Host(`syncthing.jimeagle.com`)"
      service: "syncthing-service"
      middlewares:
        - "traefik-forward-auth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    sonarr-route:
      rule: "Host(`sonarr.jimeagle.com`)"
      service: "sonarr-service"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    tautulli-route:
      rule: "Host(`tautulli.jimeagle.com`)"
      service: "tautulli-service"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    tdarr-route:
      rule: "Host(`tdarr.jimeagle.com`)"
      service: "tdarr-service"
      middlewares:
        - "traefik-forward-auth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    zinc-route:
      rule: "Host(`zinc.jimeagle.com`)"
      service: "zinc-service"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"

  services:
    2fauth-service:
      loadBalancer:
        servers:
          - url: "http://localhost:8000"
    adguard-service:
      loadBalancer:
        servers:
          - url: "http://localhost:8089"
    assistant-relay-service:
      loadBalancer:
        servers:
          - url: "http://localhost:3003"
    #    authentik-service:
    #      loadBalancer:
    #        servers:
    #          - url: "http://localhost:9002"
    bazarr-service:
      loadBalancer:
        servers:
          - url: "http://localhost:6767"
    changedetection-service:
      loadBalancer:
        servers:
          - url: "http://localhost:5001"
    doubletake-service:
      loadBalancer:
        servers:
          - url: "http://localhost:3000"
    cockpit-service:
      loadBalancer:
        servers:
          - url: "http://localhost:9090"
    esphome-service:
      loadBalancer:
        servers:
          - url: "http://localhost:6052"
    flextv-service:
      loadBalancer:
        servers:
          - url: "http://localhost:82"
    frigate-service:
      loadBalancer:
        servers:
          - url: "http://localhost:5000"
    #    go2rtc-service:
    #      loadBalancer:
    #        servers:
    #          - url: "http://localhost:1984"
    grafana-service:
      loadBalancer:
        servers:
          - url: "http://localhost:3001"
    hass-service:
      loadBalancer:
        servers:
          - url: "http://localhost:8123"
    homepage-service:
      loadBalancer:
        servers:
          - url: "http://localhost:3003"
    homarr-service:
      loadBalancer:
        servers:
          - url: "http://localhost:7575"
    influx-service:
      loadBalancer:
        servers:
          - url: "http://localhost:8086"
    kuma-service:
      loadBalancer:
        servers:
          - url: "http://localhost:3002"
    matrix-service:
      loadBalancer:
        servers:
          - url: "http://localhost:8008"
    mealie-service:
      loadBalancer:
        servers:
          - url: "http://localhost:9925"
    nodered-service:
      loadBalancer:
        servers:
          - url: "http://localhost:1880"
    nzbget-service:
      loadBalancer:
        servers:
          - url: "http://localhost:6789"
    overseerr-service:
      loadBalancer:
        servers:
          - url: "http://localhost:5055"
    pihole-service:
      loadBalancer:
        servers:
          - url: "http://localhost:81"
    plex-service:
      loadBalancer:
        servers:
          - url: "http://localhost:32400"
    portainer-service:
      loadBalancer:
        servers:
          - url: "http://localhost:9001"
    prowlarr-service:
      loadBalancer:
        servers:
          - url: "http://localhost:9696"
    radarr-service:
      loadBalancer:
        servers:
          - url: "http://localhost:7878"
    router-service:
      loadBalancer:
        servers:
          - url: "http://192.168.0.1:80"
    scrutiny-service:
      loadBalancer:
        servers:
          - url: "http://localhost:8080"
    serpbear-service:
      loadBalancer:
        servers:
          - url: "http://localhost:3004"
    syncthing-service:
      loadBalancer:
        servers:
          - url: "http://localhost:8384"
    sonarr-service:
      loadBalancer:
        servers:
          - url: "http://localhost:8989"
    tautulli-service:
      loadBalancer:
        servers:
          - url: "http://localhost:8181"
    tdarr-service:
      loadBalancer:
        servers:
          - url: "http://localhost:8265"
    zinc-service:
      loadBalancer:
        servers:
          - url: "http://localhost:4080"