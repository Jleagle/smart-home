http:

  middlewares:
    tinyauth:
      forwardAuth:
        address: "http://localhost:3005/api/auth/traefik"

  routers:
    2fauth-route:
      rule: "Host(`2fauth.jimeagle.com`)"
      service: "2fauth-service"
      middlewares:
        - "tinyauth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    adguard-route:
      rule: "Host(`adguard.jimeagle.com`)"
      service: "adguard-service"
      middlewares:
        - "tinyauth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    beszel-route:
      rule: "Host(`beszel.jimeagle.com`)"
      service: "beszel-service"
      middlewares:
        - "tinyauth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    cameras-route:
      rule: "Host(`cameras.jimeagle.com`)"
      service: "cameras-service"
      middlewares:
        - "tinyauth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    changedetection-route:
      rule: "Host(`changedetection.jimeagle.com`)"
      service: "changedetection-service"
      middlewares:
        - "tinyauth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    doubletake-route:
      rule: "Host(`doubletake.jimeagle.com`)"
      service: "doubletake-service"
      middlewares:
        - "tinyauth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    esphome-route:
      rule: "Host(`esphome.jimeagle.com`)"
      service: "esphome-service"
      middlewares:
        - "tinyauth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    frigate-route:
      rule: "Host(`frigate.jimeagle.com`)"
      service: "frigate-service"
      middlewares:
        - "tinyauth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    grafana-route:
      rule: "Host(`grafana.jimeagle.com`)"
      service: "grafana-service"
      middlewares:
        - "tinyauth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    hass-route:
      rule: "Host(`hass.jimeagle.com`)"
      service: "hass-service"
      #      middlewares: // App needs access
      #        - "tinyauth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    huntarr-route:
      rule: "Host(`huntarr.jimeagle.com`)"
      service: "huntarr-service"
      middlewares:
        - "tinyauth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    jellyfin-route:
      rule: "Host(`jelly.jimeagle.com`)"
      service: "jellyfin-service"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    mass-route:
      rule: "Host(`mass.jimeagle.com`)"
      service: "mass-service"
      middlewares:
        - "tinyauth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    influx-route:
      rule: "Host(`influx.jimeagle.com`)"
      service: "influx-service"
      middlewares:
        - "tinyauth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    kuma-route:
      rule: "Host(`kuma.jimeagle.com`)"
      service: "kuma-service"
      middlewares:
        - "tinyauth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    movies-route:
      rule: "Host(`movies.jimeagle.com`)"
      service: "movies-service"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    nodered-route:
      rule: "Host(`nodered.jimeagle.com`) && !PathPrefix(`/reviews/`)"
      service: "nodered-service"
      middlewares:
        - "tinyauth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    nodered-route-public:
      rule: "Host(`nodered.jimeagle.com`) && PathPrefix(`/reviews/`)"
      service: "nodered-service"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    nzbget-route:
      rule: "Host(`nzbget.jimeagle.com`)"
      service: "nzbget-service"
      middlewares:
        - "tinyauth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    overseerr-route:
      rule: "Host(`overseerr.jimeagle.com`)"
      service: "overseerr-service"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    prowlarr-route:
      rule: "Host(`prowlarr.jimeagle.com`)"
      service: "prowlarr-service"
      middlewares:
        - "tinyauth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    radarr-route:
      rule: "Host(`radarr.jimeagle.com`)"
      service: "radarr-service"
      middlewares:
        - "tinyauth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    router-route:
      rule: "Host(`router.jimeagle.com`)"
      service: "router-service"
      middlewares:
        - "tinyauth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    scrutiny-route:
      rule: "Host(`scrutiny.jimeagle.com`)"
      service: "scrutiny-service"
      middlewares:
        - "tinyauth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    shows-route:
      rule: "Host(`shows.jimeagle.com`)"
      service: "shows-service"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    slskd-route:
      rule: "Host(`slskd.jimeagle.com`)"
      service: "slskd-service"
      middlewares:
        - "tinyauth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    sonarr-route:
      rule: "Host(`sonarr.jimeagle.com`)"
      service: "sonarr-service"
      middlewares:
        - "tinyauth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    strava-route:
      rule: "Host(`strava.jimeagle.com`)"
      service: "strava-service"
      middlewares:
        - "tinyauth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    tautulli-route:
      rule: "Host(`tautulli.jimeagle.com`)"
      service: "tautulli-service"
      middlewares:
        - "tinyauth"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"
    tinyauth-route:
      rule: "Host(`login.jimeagle.com`)"
      service: "tinyauth-service"
      tls:
        certResolver: "myresolver"
      entryPoints:
        - "websecure"

  services:
    2fauth-service:
      loadBalancer:
        servers:
          - url: "http://localhost:8000"
    adguard-service:
      loadBalancer:
        servers:
          - url: "http://localhost:8089"
    beszel-service:
      loadBalancer:
        servers:
          - url: "http://localhost:8090"
    cameras-service:
      loadBalancer:
        servers:
          - url: "http://localhost:5002"
    changedetection-service:
      loadBalancer:
        servers:
          - url: "http://localhost:5001"
    doubletake-service:
      loadBalancer:
        servers:
          - url: "http://localhost:3000"
    esphome-service:
      loadBalancer:
        servers:
          - url: "http://localhost:6052"
    frigate-service:
      loadBalancer:
        servers:
          - url: "http://localhost:5000"
    grafana-service:
      loadBalancer:
        servers:
          - url: "http://localhost:3001"
    hass-service:
      loadBalancer:
        servers:
          - url: "http://localhost:8123"
    huntarr-service:
      loadBalancer:
        servers:
          - url: "http://localhost:9705"
    jellyfin-service:
      loadBalancer:
        servers:
          - url: "http://localhost:8096"
    mass-service:
      loadBalancer:
        servers:
          - url: "http://localhost:8095"
    influx-service:
      loadBalancer:
        servers:
          - url: "http://localhost:8086"
    kuma-service:
      loadBalancer:
        servers:
          - url: "http://localhost:3002"
    movies-service:
      loadBalancer:
        servers:
          - url: "http://localhost:7879"
    nodered-service:
      loadBalancer:
        servers:
          - url: "http://localhost:1880"
    nzbget-service:
      loadBalancer:
        servers:
          - url: "http://localhost:6789"
    overseerr-service:
      loadBalancer:
        servers:
          - url: "http://localhost:5055"
    prowlarr-service:
      loadBalancer:
        servers:
          - url: "http://localhost:9696"
    radarr-service:
      loadBalancer:
        servers:
          - url: "http://localhost:7878"
    router-service:
      loadBalancer:
        servers:
          - url: "http://192.168.0.1:80"
    scrutiny-service:
      loadBalancer:
        servers:
          - url: "http://localhost:8080"
    shows-service:
      loadBalancer:
        servers:
          - url: "http://localhost:8990"
    slskd-service:
      loadBalancer:
        servers:
          - url: "http://localhost:5030"
    sonarr-service:
      loadBalancer:
        servers:
          - url: "http://localhost:8989"
    strava-service:
      loadBalancer:
        servers:
          - url: "http://localhost:8082"
    tautulli-service:
      loadBalancer:
        servers:
          - url: "http://localhost:8181"
    tinyauth-service:
      loadBalancer:
        servers:
          - url: "http://localhost:3005"
