assistant-relay:
  image: "apipa169/assistant-relay:latest"
  container_name: "assistant-relay"
  hostname: "assistant-relay"
  restart: "unless-stopped"
  ports:
    - "3003:3000"
  volumes:
    - "${HOME}/AssistantRelay/config.json:/assistant_relay/bin/config.json:rw"
    - "${HOME}/AssistantRelay/Responses:/assistant_relay/bin/audio-responses:rw"

  authentik-server:
    image: "ghcr.io/goauthentik/server:latest"
    container_name: "authentik-server"
    hostname: "authentik-server"
    restart: "unless-stopped"
    ports:
      - "9002:9000"
      - "9443:9443"
    command: "server"
    environment:
      PG_PASS: "${AUTHENTIK_PG_PASS}"
      AUTHENTIK_SECRET_KEY: "${AUTHENTIK_SECRET_KEY}"
      AUTHENTIK_POSTGRESQL__PASSWORD: "${AUTHENTIK_POSTGRESQL__PASSWORD}"
    env_file:
      - "./authentik/authentik.env"
    volumes:
      - "${HOME}/Authentik/Media:/media"
      - "${HOME}/Authentik/Templates:/templates"

  authentik-worker:
    image: "ghcr.io/goauthentik/server:latest"
    container_name: "authentik-worker"
    hostname: "authentik-worker"
    restart: "unless-stopped"
    command: "worker"
    environment:
      PG_PASS: "${AUTHENTIK_PG_PASS}"
      AUTHENTIK_SECRET_KEY: "${AUTHENTIK_SECRET_KEY}"
      AUTHENTIK_POSTGRESQL__PASSWORD: "${AUTHENTIK_POSTGRESQL__PASSWORD}"
    env_file:
      - "./authentik/authentik.env"
    #    user: root
    volumes:
      #      - /var/run/docker.sock:/var/run/docker.sock
      - "${HOME}/Authentik/Certs:/certs"
      - "${HOME}/Authentik/Media:/media"
      - "${HOME}/Authentik/Templates:/templates"

bazarr:
  image: "linuxserver/bazarr:latest"
  container_name: "bazarr"
  hostname: "bazarr"
  restart: "unless-stopped"
  ports:
    - "6767:6767"
  environment:
    - "PUID=1000"
    - "PGID=1000"
    - "TZ=Europe/London"
    - "UMASK_SET=022" #optional
  volumes:
    - "${HOME}/Bazarr:/config"
    - "${HOME}/Media/Movies:/movies"
    - "${HOME}/Media/Television:/tv"

cloudflare:
  image: "cloudflare/cloudflared:latest"
  container_name: "cloudflare"
  hostname: "cloudflare"
  restart: "unless-stopped"
  network_mode: "host"
  command: "tunnel --no-autoupdate run"
  environment:
    - "TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}"

ddclient:
  image: "lscr.io/linuxserver/ddclient:latest"
  container_name: "ddclient"
  hostname: "ddclient"
  restart: "unless-stopped"
  environment:
    - "PUID=1000"
    - "PGID=1000"
    - "TZ=Europe/London"
    - "CF_API_EMAIL_FILE=/run/secrets/cloudflare_login_email"
    - "CF_API_KEY_FILE=/run/secrets/cloudflare_api_token"
  volumes:
    - "${HOME}/Ddclient:/config"

emby:
  image: "emby/embyserver:latest"
  hostname: "emby"
  container_name: "emby"
  restart: "unless-stopped"
  environment:
    - "UID=1000"
    - "GID=1000"
  ports:
    - "8096:8096"
  volumes:
    - "${MEDIA_DATA}/Docker/Emby/Config:/config"
    - "${MEDIA_DATA}/Television:/mnt/share1"
    - "${MEDIA_DATA}/Video:/mnt/share2"

flextv:
  image: "digitalhigh/flextv:latest"
  container_name: "flextv"
  hostname: "flextv"
  restart: "unless-stopped"
  ports:
    - "82:80"
  volumes:
    - "${HOME}/FlexTV:/config"
  environment:
    - "PUID=1000"
    - "PGID=1000"
    - "TZ=Europe/London"

  go2rtc:
    image: "alexxit/go2rtc:latest"
    container_name: "go2rtc"
    hostname: "go2rtc"
    restart: "unless-stopped"
    devices:
      - "/dev/dri/renderD128"
    ports:
      - "1984:1984" # API
    environment:
      - "TZ=Europe/London"
    volumes:
      - "${HOME}/Go2rtc/Config:/config"

homarr:
  image: "ghcr.io/ajnart/homarr:latest"
  container_name: "homarr"
  hostname: "homarr"
  restart: "unless-stopped"
  volumes:
    - "${HOME}/Homarr/configs:/app/data/configs"
    - "${HOME}/Homarr/icons:/app/public/icons"
  ports:
    - "7575:7575"

hydra:
  image: "linuxserver/nzbhydra2:latest"
  container_name: "hydra"
  hostname: "hydra"
  restart: "unless-stopped"
  ports:
    - "5076:5076"
  volumes:
    - "${HOME}/Hydra/Config:/config"
    - "${HOME}/Hydra/Downloads:/downloads"
  environment:
    - "PGID=1000"
    - "PUID=1000"
    - "TZ=Europe/London"
  labels:
    - "traefik.enable=true"
    - "traefik.port=5076"
    - "traefik.http.routers.hydra.entrypoints=websecure"
    - "traefik.http.routers.hydra.rule=Host(`hydra.jimeagle.com`)"
    - "traefik.http.services.hydra.loadbalancer.server.port=5076"

matrix:
  image: "matrixdotorg/synapse:latest"
  container_name: "matrix"
  hostname: "matrix"
  restart: "unless-stopped"
  volumes:
    - "${HOME}/Matrix:/data"
  ports:
    - "8008:8008"

mealie:
  image: "hkotel/mealie:latest"
  container_name: "mealie"
  hostname: "mealie"
  restart: "unless-stopped"
  volumes:
    - "${HOME}/Mealie:/app/data"
  ports:
    - "9925:80"
    - "9000:9000"
  environment:
    TZ: "Europe/London"
    DB_ENGINE: "sqlite"
    BASE_URL: "https://mealie.jimeagle.com/"
    TOKEN_TIME: "12"

minecraft:
  image: "itzg/minecraft-bedrock-server"
  container_name: "minecraft"
  hostname: "minecraft"
  restart: "unless-stopped"
  ports:
    - "25565:25565/udp"
  volumes:
    - "${HOME}/Minecraft:/data"
  environment:
    EULA: "TRUE"
    GAMEMODE: "survival"
    DIFFICULTY: "hard"
    VERSION: "LATEST"
    MAX_PLAYERS: 4

netdata:
  image: "netdata/netdata:latest"
  hostname: "netdata"
  container_name: "netdata"
  restart: "unless-stopped"
  ports:
    - "19999:19999"
  cap_add:
    - "SYS_PTRACE"
  security_opt:
    - "apparmor:unconfined"
  volumes:
    - "/proc:/host/proc:ro"
    - "/sys:/host/sys:ro"
    - "/var/run/docker.sock:/var/run/docker.sock:ro"

noip:
  image: "coppit/no-ip:latest"
  hostname: "noip"
  container_name: "noip"
  restart: "unless-stopped"
  environment:
    - "USERNAME=${NOIP_USERNAME}"
    - "PASSWORD=${NOIP_PASSWORD}"
    - "DOMAINS=${NOIP_DOMAINS}"
    - "INTERVAL=30m"
  volumes:
    - "${DOCKER_DATA}/no-ip/config:/config"
    - "/etc/localtime:/etc/localtime:ro"

overseerr:
  image: "linuxserver/overseerr:latest"
  container_name: "overseerr"
  hostname: "overseerr"
  restart: "unless-stopped"
  ports:
    - "5055:5055"
  environment:
    - "PUID=1000"
    - "PGID=1000"
    - "TZ=Europe/London"
  volumes:
    - "${HOME}/Overseerr:/config"

pihole:
  image: "pihole/pihole:latest"
  container_name: "pihole"
  hostname: "pihole"
  restart: "unless-stopped"
  ports:
    - "53:53/tcp"
    - "53:53/udp"
    - "67:67/udp"
    - "81:80"
  environment:
    TZ: "Europe/London"
    ServerIP: "192.168.0.7"
    WEBPASSWORD: "${PIHOLE_PASSWORD}"
    ADMIN_EMAIL: "jimeagle@gmail.com"
    PIHOLE_DNS_: "1.1.1.1;8.8.8.8"
    VIRTUAL_HOST: "pihole.jimeagle.com"
  volumes:
    - "${HOME}/PiHole/:/etc/pihole/"

plexmeta:
  image: "meisnate12/plex-meta-manager:latest"
  container_name: "plexmeta"
  hostname: "plexmeta"
  restart: "unless-stopped"
  volumes:
    - "${HOME}/PlexMeta:/config"

traefik-hub-agent:
  image: "ghcr.io/traefik/hub-agent-traefik:latest"
  container_name: "traefik-hub-agent"
  restart: "unless-stopped"
  network_mode: "host"
  command:
    - "run"
    - "--hub.token=${TRAEFIK_HUB_TOKEN}"
    - "--auth-server.advertise-url=http://hub-agent"
    - "--traefik.host=traefik"
    - "--traefik.tls.insecure=true"
  volumes:
    - "/var/run/docker.sock:/var/run/docker.sock"
  depends_on:
    - "traefik"

syncthing:
  image: "lscr.io/linuxserver/syncthing"
  container_name: "syncthing"
  hostname: "syncthing"
  restart: "unless-stopped"
  ports:
    - "8384:8384"
    - "22000:22000/tcp"
    - "22000:22000/udp"
    - "21027:21027/udp"
  environment:
    - "PUID=1000"
    - "PGID=1000"
    - "TZ=Europe/London"
  volumes:
    - "${HOME}/Syncthing/Config:/config"
    - "${HOME}/Syncthing/Data:/config/Default"

tubesync:
  image: "ghcr.io/meeb/tubesync:latest"
  hostname: "tubesync"
  container_name: "tubesync"
  ports:
    - "4848:4848"
  environment:
    - "PUID=1000"
    - "PGID=1000"
    - "TZ=Europe/London"
    - "HTTP_USER=$TUBE_SYNC_USER"
    - "HTTP_PASS=$TUBE_SYNC_PASS"
  volumes:
    - "${HOME}/TubeSync:/config"
    - "${HOME}/Media/YouTube:/downloads"
    - "/dev/dri:/dev/dri" # Quicksync
  restart: "unless-stopped"
  labels:
    - "traefik.enable=true"
    - "traefik.port=4848"
    - "traefik.http.routers.tubesync.entrypoints=websecure"
    - "traefik.http.routers.tubesync.rule=Host(`tubesync.jimeagle.com`)"
    - "com.centurylinklabs.watchtower.enable=true"

  unbound:
    container_name: unbound
    image: "mvance/unbound:latest"
    expose:
      - "53"
    networks:
      - dns
    network_mode: bridge
    ports:
      - target: 53
        published: 53
        protocol: tcp
        mode: host
      - target: 53
        published: 53
        protocol: udp
        mode: host
    volumes:
      - type: bind
        read_only: true
        source: ./my_conf/forward-records.conf
        target: /opt/unbound/etc/unbound/forward-records.conf
      - type: bind
        read_only: true
        source: ./my_conf/a-records.conf
        target: /opt/unbound/etc/unbound/a-records.conf
    restart: unless-stopped

varken:
  image: "boerderij/varken:latest"
  hostname: "varken"
  container_name: "varken"
  restart: "unless-stopped"
  environment:
    - "TZ=Europe/London"
    - "VRKN_GLOBAL_SONARR_SERVER_IDS=1"
    - "VRKN_GLOBAL_RADARR_SERVER_IDS=1"
    - "VRKN_GLOBAL_OMBI_SERVER_IDS=false"
    - "VRKN_GLOBAL_MAXMIND_LICENSE_KEY"
    - "VRKN_INFLUXDB_URL=influx"
    - "VRKN_INFLUXDB_USERNAME"
    - "VRKN_INFLUXDB_PASSWORD"
    - "VRKN_TAUTULLI_1_URL=tautulli"
    - "VRKN_TAUTULLI_1_APIKEY"
    - "VRKN_SONARR_1_URL=sonarr"
    - "VRKN_SONARR_1_APIKEY"
    - "VRKN_RADARR_1_URL=radarr"
    - "VRKN_RADARR_1_APIKEY"
  volumes:
    - "${HOME}/Varken:/config"
