version: '3'

services:

  traefik:
    container_name: "traefik"
    hostname: "traefik"
    image: "traefik:v2.6"
    restart: unless-stopped
    command:
      - "--accesslog=false"
      - "--api.dashboard=false"
      - "--experimental.http3=true"

      - "--providers.docker=true"
      - "--providers.docker.watch=true"
      - "--providers.docker.exposedbydefault=false"

      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"

      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls.certresolver=myresolver"

      - "--certificatesresolvers.myresolver.acme.email=jimeagle@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/acme.json"
      - "--certificatesresolvers.myresolver.acme.dnschallenge=true"
      - "--certificatesresolvers.myresolver.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.myresolver.acme.dnschallenge.delaybeforecheck=10"
    ports:
      - "80:80"
      - "443:443"
    environment:
      CLOUDFLARE_DNS_API_TOKEN: "${CLOUDFLARE_DNS_API_TOKEN}"
      CLOUDFLARE_ZONE_API_TOKEN: "${CLOUDFLARE_ZONE_API_TOKEN}"
    volumes:
      - "${HOME}/Traefik/acme.json:/acme.json"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      #      - "./traefik/rules.toml:/etc/traefik/rules.toml"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  homer:
    container_name: homer
    hostname: homer
    image: b4bz/homer
    restart: unless-stopped
    volumes:
      - ${HOME}/Homer:/www/assets
      - ./homer:/www/assets/config.yml
    #environment:
    #  - UID=1000
    #  - GID=1000
    labels:
      - "traefik.enable=true"
      - "traefik.port=8080"
      - "traefik.http.routers.homer.entrypoints=websecure"
      - "traefik.http.routers.homer.rule=Host(`seven.jimeagle.com`)"
      - "com.centurylinklabs.watchtower.enable=true"

  radarr:
    image: linuxserver/radarr:latest
    hostname: radarr
    container_name: radarr
    restart: "unless-stopped"
    volumes:
      - ${HOME}/Radarr:/config
      - ${HOME}/NZBGet/Downloads:/downloads
      - ${HOME}/Media/Movies:/movies
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=Europe/London
    labels:
      - "traefik.enable=true"
      - "traefik.port=7878"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.rule=Host(`radarr.jimeagle.com`)"
      - "com.centurylinklabs.watchtower.enable=true"

  sonarr:
    image: linuxserver/sonarr:latest
    hostname: sonarr
    container_name: sonarr
    restart: "unless-stopped"
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=Europe/London
    volumes:
      - ${HOME}/Sonarr:/config
      - ${HOME}/NZBGet/Downloads:/downloads
      - ${HOME}/Media/Television:/tv
      - /etc/localtime:/etc/localtime:ro
    labels:
      - "traefik.enable=true"
      - "traefik.port=8989"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.jimeagle.com`)"
      - "com.centurylinklabs.watchtower.enable=true"

  hydra:
    image: linuxserver/nzbhydra2:latest
    hostname: hydra
    container_name: hydra
    restart: "unless-stopped"
    volumes:
      - ${HOME}/Hydra/Config:/config
      - ${HOME}/Hydra/Downloads:/downloads
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=Europe/London
    labels:
      - "traefik.enable=true"
      - "traefik.port=5076"
      - "traefik.http.routers.hydra.entrypoints=websecure"
      - "traefik.http.routers.hydra.rule=Host(`hydra.jimeagle.com`)"
      - "com.centurylinklabs.watchtower.enable=true"

  nzbget:
    image: linuxserver/nzbget:latest
    hostname: nzbget
    container_name: nzbget
    restart: "unless-stopped"
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=Europe/London
    volumes:
      - ${HOME}/NZBGet/Config:/config
      - ${HOME}/NZBGet/Downloads:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.port=6789"
      - "traefik.http.routers.nzbget.entrypoints=websecure"
      - "traefik.http.routers.nzbget.rule=Host(`nzbget.jimeagle.com`)"
      - "com.centurylinklabs.watchtower.enable=true"

  plex:
    image: linuxserver/plex:latest
    hostname: plex
    container_name: plex
    network_mode: "host"
    restart: "unless-stopped"
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=Europe/London
      - VERSION=latest
    volumes:
      - ${HOME}/Plex/Transcoding:/transcode
      - ${HOME}/Plex/Config:/config
      - ${HOME}/Media/Television:/data/tvshows
      - ${HOME}/Media/Movies:/data/movies
      - ${HOME}/Media/YouTube:/data/youtube
      - /dev/dri:/dev/dri # Quicksync
    labels:
      - "traefik.enable=true"
      - "traefik.port=32400"
      - "traefik.http.routers.plex.entrypoints=websecure"
      - "traefik.http.routers.plex.rule=Host(`plex.jimeagle.com`)"
      - "com.centurylinklabs.watchtower.enable=true"

  ddns:
    container_name: ddns
    hostname: ddns
    image: ghcr.io/jleagle/ddns:latest
    restart: "unless-stopped"
    environment:
      - DO_KEY=${DDNS_DO_KEY}
      - CF_KEY=${DDNS_CF_KEY}
      - ONE_TIME=false
      - ON_LOAD=true
    volumes:
      - ${HOME}/DDNS/records.yaml:/root/records.yaml:ro
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  tubesync:
    image: ghcr.io/meeb/tubesync:latest
    hostname: tubesync
    container_name: tubesync
    ports:
      - "4848:4848"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - HTTP_USER=$TUBE_SYNC_USER
      - HTTP_PASS=$TUBE_SYNC_PASS
    volumes:
      - ${HOME}/TubeSync:/config
      - ${HOME}/Media/YouTube:/downloads
      - /dev/dri:/dev/dri # Quicksync
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.port=4848"
      - "traefik.http.routers.tubesync.entrypoints=websecure"
      - "traefik.http.routers.tubesync.rule=Host(`tubesync.jimeagle.com`)"
      - "com.centurylinklabs.watchtower.enable=true"

  hass:
    image: homeassistant/home-assistant:latest
    hostname: hass
    container_name: hass
    restart: "unless-stopped"
    network_mode: host
    privileged: true
    volumes:
      - ${HOME}/Hass:/config
      - /etc/localtime:/etc/localtime:ro
    environment:
      - TZ=Europe/London
    #    devices:
    #      - /dev/ttyUSB0:/dev/ttyUSB0
    labels:
      - "traefik.enable=true"
      - "traefik.port=8123"
      - "traefik.http.routers.hass.entrypoints=websecure"
      - "traefik.http.routers.hass.rule=Host(`hass.jimeagle.com`)"
      - "traefik.http.services.hass.loadbalancer.server.port=8123"
      - "com.centurylinklabs.watchtower.enable=true"

  nodered:
    image: nodered/node-red:latest
    hostname: nodered
    container_name: nodered
    restart: "unless-stopped"
    environment:
      - TZ=Europe/London
    volumes:
      - ${HOME}/NodeRed:/data
    labels:
      - "traefik.enable=true"
      - "traefik.port=1880"
      - "traefik.http.routers.nodered.entrypoints=websecure"
      - "traefik.http.routers.nodered.rule=Host(`nodered.jimeagle.com`)"
      - "com.centurylinklabs.watchtower.enable=true"

  #  grafana:
  #    container_name: grafana
  #    hostname: grafana
  #    image: grafana/grafana:latest
  #    restart: "unless-stopped"
  #    user: "0"
  #    volumes:
  #      - ${HOME}/Grafana/key.json:/etc/grafana/key.json:ro
  #      - ${HOME}/Grafana/lib:/var/lib/grafana
  #      - ./grafana/grafana.ini:/etc/grafana/grafana.ini:ro
  #    labels:
  #      - "traefik.enable=true"
  #      - "traefik.port=3000"
  #      - "traefik.http.routers.grafana.entrypoints=websecure"
  #      - "traefik.http.routers.grafana.rule=Host(`grafana.jimeagle.com`)"
  #      - "com.centurylinklabs.watchtower.enable=true"

  #  grafana-image-renderer:
  #    container_name: grafana-image-renderer
  #    hostname: grafana-image-renderer
  #    image: grafana/grafana-image-renderer:latest
  #    restart: "unless-stopped"
  #    environment:
  #      ENABLE_METRICS: 'false'
  #    labels:
  #      - "com.centurylinklabs.watchtower.enable=true"

  phlex:
    image: digitalhigh/phlex:latest
    hostname: phlex
    container_name: phlex
    restart: "unless-stopped"
    volumes:
      - ${HOME}/Phlex:/config
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=Europe/London
    labels:
      - "traefik.enable=true"
      - "traefik.port=5666"
      - "traefik.http.routers.phlex.entrypoints=websecure"
      - "traefik.http.routers.phlex.rule=Host(`phlex.jimeagle.com`)"
      - "com.centurylinklabs.watchtower.enable=true"

  bazarr:
    image: linuxserver/bazarr:latest
    hostname: bazarr
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - UMASK_SET=022 #optional
    volumes:
      - ${HOME}/Bazarr:/config
      - ${HOME}/Media/Movies:/movies
      - ${HOME}/Media/Television:/tv
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.port=6767"
      - "traefik.http.routers.bazarr.entrypoints=websecure"
      - "traefik.http.routers.bazarr.rule=Host(`bazarr.jimeagle.com`)"
      - "com.centurylinklabs.watchtower.enable=true"

  #  netdata:
  #    image: netdata/netdata:latest
  #    hostname: netdata
  #    container_name: netdata
  #    restart: "unless-stopped"
  #    cap_add:
  #      - SYS_PTRACE
  #    security_opt:
  #      - apparmor:unconfined
  #    volumes:
  #      - /proc:/host/proc:ro
  #      - /sys:/host/sys:ro
  #      - /var/run/docker.sock:/var/run/docker.sock:ro
  #    labels:
  #      - "traefik.enable=true"
  #      - "traefik.port=19999"
  #      - "traefik.http.routers.netdata.entrypoints=websecure"
  #      - "traefik.http.routers.netdata.rule=Host(`netdata.jimeagle.com`)"
  #      - "com.centurylinklabs.watchtower.enable=true"

  #  frigate:
  #    container_name: frigate
  #    #privileged: true # this may not be necessary for all setups
  #    restart: unless-stopped
  #    image: blakeblackshear/frigate:0.9.4-amd64
  #    shm_size: "64mb" # update for your cameras based on calculation above
  #    #    devices:
  #    #      - /dev/bus/usb:/dev/bus/usb # passes the USB Coral, needs to be modified for other versions
  #    #      - /dev/apex_0:/dev/apex_0 # passes a PCIe Coral, follow driver instructions here https://coral.ai/docs/m2/get-started/#2a-on-linux
  #    #      - /dev/dri/renderD128 # for intel hwaccel, needs to be updated for your hardware
  #    volumes:
  #      - ${HOME}/Frigate/config.yml:/config/config.yml:ro
  #      - ${HOME}/Media/Frigate:/media/frigate
  #      - /etc/localtime:/etc/localtime:ro
  #      - type: tmpfs # Optional: 1GB of memory, reduces SSD/SD Card wear
  #        target: /tmp/cache
  #        tmpfs:
  #          size: 1000000000
  #    ports:
  #      - "1935:1935" # RTMP feeds
  #    environment:
  #      FRIGATE_RTSP_PASSWORD: "password"
  #    labels:
  #      - "traefik.enable=true"
  #      - "traefik.port=5000"
  #      - "traefik.http.routers.frigate.entrypoints=websecure"
  #      - "traefik.http.routers.frigate.rule=Host(`frigate.jimeagle.com`)"
  #      - "com.centurylinklabs.watchtower.enable=true"

  doubletake:
    container_name: doubletake
    hostname: doubletake
    image: jakowenko/double-take
    restart: unless-stopped
    volumes:
      - ${HOME}/DoubleTake:/.storage
    labels:
      - "traefik.enable=true"
      - "traefik.port=3000"
      - "traefik.http.routers.doubletake.entrypoints=websecure"
      - "traefik.http.routers.doubletake.rule=Host(`doubletake.jimeagle.com`)"
      - "com.centurylinklabs.watchtower.enable=true"

  #  traefik-forward-auth:
  #    image: thomseddon/traefik-forward-auth:2
  #    environment:
  #      - PROVIDERS_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
  #      - PROVIDERS_GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
  #      - SECRET=${AUTH_SECRET}
  #      - CONFIG=/config.json
  #      - WHITELIST=jimeagle@gmail.com
  #    volumes:
  #      - ${HOME}/Auth/config.json:/config.json
  #    labels:
  #      - "traefik.http.middlewares.traefik-forward-auth.forwardauth.address=http://traefik-forward-auth:4181"
  #      - "traefik.http.middlewares.traefik-forward-auth.forwardauth.authResponseHeaders=X-Forwarded-User"

  watchtower:
    container_name: watchtower
    hostname: watchtower
    image: containrrr/watchtower:latest
    restart: "unless-stopped"
    volumes:
      - ${HOME}/Watchtower/config.json:/config.json
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
    environment:
      - TZ=Europe/London
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_NOTIFICATIONS=slack
      - WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL=${WATCHTOWER_WEBHOOK}
      - WATCHTOWER_NOTIFICATIONS_LEVEL=error
      - WATCHTOWER_SCHEDULE=0 0 0 * * *
      - WATCHTOWER_LABEL_ENABLE=true
      - WATCHTOWER_NO_STARTUP_MESSAGE=true
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  mosquitto:
    image: eclipse-mosquitto:latest
    hostname: mosquitto
    container_name: mosquitto
    volumes:
      - ${HOME}/Mosquitto/Log/mosquitto.log:/mosquitto/log/mosquitto.log
      - ${HOME}/Mosquitto/Data:/mosquitto/data
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  #  ombi:
  #    image: linuxserver/ombi:latest
  #    hostname: ombi
  #    container_name: ombi
  #    restart: "unless-stopped"
  #    volumes:
  #    - ${HOME}/Ombi:/config
  #    environment:
  #    - PGID=1000
  #    - TZ=Europe/London
  #    labels:
  #    labels:
  #      - "traefik.enable=true"
  #      - "traefik.port=3579"
  #      - "traefik.http.routers.ombi.entrypoints=websecure"
  #      - "traefik.http.routers.ombi.rule=Host(`frigate.jimeagle.com`)"
  #      - "com.centurylinklabs.watchtower.enable=true"

  #  overseerr:
  #    image: sctx/overseerr:latest
  #    hostname: overseerr
  #    container_name: overseerr
  #    restart: "unless-stopped"
  #    volumes:
  #      - ${HOME}/Overseerr:/app/config
  #    environment:
  #      - TZ=Europe/London
  #    labels:
  #    labels:
  #      - "traefik.enable=true"
  #      - "traefik.port=5055"
  #      - "traefik.http.routers.overseerr.entrypoints=websecure"
  #      - "traefik.http.routers.overseerr.rule=Host(`frigate.jimeagle.com`)"
  #      - "com.centurylinklabs.watchtower.enable=true"

  #  pihole:
  #    image: pihole/pihole:latest
  #    dns:
  #      - 127.0.0.1
  #      - 1.1.1.1
  #    ports:
  #      - "53:53/tcp"
  #      - "53:53/udp"
  #      - "80:80/tcp"
  #      - "443:443/tcp"
  #    # The 3 lines below are required if Pi-hole is to provide DHCP
  #    # cap_add:
  #    #  - NET_ADMIN
  #    # network_mode: "host"
  #    environment:
  #      # enter your docker host IP here
  #      ServerIP:
  #      # IPv6 Address if your network supports it
  #      #ServerIPv6: 192.168.1.55
  #      # jwilder/proxy envs, see readme for more info
  #      PROXY_LOCATION: pihole
  #      VIRTUAL_HOST: pihole.yourdomain.local
  #      VIRTUAL_PORT: 80
  #    # Add your own custom hostnames you need for your domain
  #    extra_hosts:
  #      #   Point any of the jwilder virtual_host addresses
  #      # to your docker host ip address
  #      - 'pihole.yourdomain.local:192.168.1.55'
  #    volumes:
  #    # - '/etc/pihole/:/etc/pihole/'
  #    # WARNING: if this log doesn't exist as a file on the host already
  #    # docker will try to create a directory in its place making for lots of errors
  #    # - '/var/log/pihole.log:/var/log/pihole.log'
  #    restart: always
  #    labels:
  #      - "com.centurylinklabs.watchtower.enable=true"
